services:
  proxy:
    image: traefik
    container_name: traefik
    restart: unless-stopped
    mem_limit: 512M            
    memswap_limit: 1G 
    security_opt:
      - no-new-privileges=true
    dns:
      - 9.9.9.9
      - 1.1.1.1
    command:
      - "--log.level=ERROR"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=duckdns"
      - "--certificatesresolvers.letsencrypt.acme.email=mail@mail.com"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.disablePropagationCheck=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=9.9.9.9:53,1.1.1.1:53"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certResolver=letsencrypt"
      - "--entrypoints.websecure.http.tls.domains[0].main=${MY_DOMAIN}"
      - "--entrypoints.websecure.http.tls.domains[0].sans=*.${MY_DOMAIN}"
    volumes:
      - "${CONFIG_LOCATION}/traefik:/letsencrypt"
      - "/run/user/1000/docker.sock:/var/run/docker.sock:ro"
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`${MY_DOMAIN}`)'
      - 'traefik.http.routers.api.entryPoints=websecure'
      - 'traefik.http.routers.api.service=api@internal'
    ports:
      - "443:443"
      - "80:80"
    environment:
      DUCKDNS_TOKEN: "${DUCKDNS_TOKEN}"
  
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: always
    mem_limit: 4G
    memswap_limit: 4G
    security_opt:
      - no-new-privileges=true
    dns:
      - 9.9.9.11
      - 1.1.1.1
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.qt.rule=Host(`qt.${MY_DOMAIN}`)'
      - 'traefik.http.routers.qt.entryPoints=websecure'
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=8081"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
      - WEBUI_PORT=8081
      - TORRENTING_PORT=6881
    volumes:
      - type: bind
        source: ${CONFIG_LOCATION}/Qbittorrent
        target: /config
      - type: bind
        source: ${DOWNLOADS_LOCATION}
        target: /downloads
    ports:
      - 8081:8081
      - 6881:6881
      - 6881:6881/udp
    
  jellyfin:
    container_name: jellyfin
    image: jellyfin/jellyfin:latest
    restart: unless-stopped
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
    mem_limit: 4G            
    memswap_limit: 4G 
    security_opt:
      - no-new-privileges=true
    dns:
      - 9.9.9.9
      - 1.1.1.1
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.jellyfin.rule=Host(`jellyfin.${MY_DOMAIN}`)'
      - 'traefik.http.routers.jellyfin.entryPoints=websecure'
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
    environment:
      TZ: Asia/Kolkata
    volumes:
      - type: tmpfs
        target: /cache
      - type: bind
        source: ${CONFIG_LOCATION}/Jellyfin
        target: /config
      - type: bind
        source: ${MOVIES_LOCATION}
        target: /media/Movies
        read_only: true
      - type: bind
        source: ${TV_SHOWS_LOCATION}
        target: /media/TV_Shows
        read_only: true
      - type: bind
        source: ${MUSIC_LOCATION}
        target: /media/Music
        read_only: true
    ports:
      - "8096:8096"

  ersatztv:
    container_name: ersatztv
    image: docker.io/jasongdove/ersatztv:develop-vaapi
    restart: always
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
    mem_limit: 4G            
    memswap_limit: 4G 
    security_opt:
      - no-new-privileges=true
    dns:
      - 9.9.9.11
      - 1.1.1.1
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.ersatztv.rule=Host(`etv.${MY_DOMAIN}`)'
      - 'traefik.http.routers.ersatztv.entryPoints=websecure'
      - "traefik.http.services.ersatztv.loadbalancer.server.port=8409"
    environment:
      TZ: Asia/Kolkata
      Bugsnag:Enable: false 
    volumes:
      - type: tmpfs
        target: /transcode
      - type: bind
        source: ${CONFIG_LOCATION}/Ersatztv
        target: /config
      - type: bind
        source: ${FILLERS_LOCATION}
        target: /mnt/Fillers
        read_only: true
      - type: bind
        source: ${MUSIC_VIDEOS_LOCATION}
        target: /mnt/Music
        read_only: true
      - type: bind
        source: ${MUSIC_LOCATION}
        target: /mnt/Songs
        read_only: true
      
  redlib:
    container_name: "redlib"
    image: quay.io/redlib/redlib:latest
    restart: always
    mem_limit: 512M            
    memswap_limit: 1G 
    security_opt:
      - no-new-privileges=true
    dns:
      - 9.9.9.11
      - 1.1.1.1
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.redlib.rule=Host(`redlib.${MY_DOMAIN}`)'
      - 'traefik.http.routers.redlib.entryPoints=websecure'
    env_file: redlib.env

  jiotv:
    container_name: "jiotv"
    image: ghcr.io/jiotv-go/jiotv_go
    restart: unless-stopped
    mem_limit: 512M            
    memswap_limit: 1G
    security_opt:
      - no-new-privileges=true
    dns:
      - 9.9.9.11
      - 1.1.1.1
    volumes:
      - type: bind
        source: ${CONFIG_LOCATION}/JioTV_Go
        target: /app/.jiotv_go
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.jiotv.rule=Host(`jiotv.${MY_DOMAIN}`)'
      - 'traefik.http.routers.jiotv.entryPoints=websecure'
      - "traefik.http.services.jiotv.loadbalancer.server.port=5001"
    environment:
      - JIOTV_EPG=true
      - JIOTV_DRM=true

  tunarr:
    container_name: tunarr
    image: docker.io/chrisbenincasa/tunarr:latest-vaapi
    restart: always
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
    mem_limit: 4G            
    memswap_limit: 4G 
    security_opt:
      - no-new-privileges=true
    dns:
      - 9.9.9.11
      - 1.1.1.1
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.tunarr.rule=Host(`tunarr.${MY_DOMAIN}`)'
      - 'traefik.http.routers.tunarr.entryPoints=websecure'
      - "traefik.http.services.tunarr.loadbalancer.server.port=8000"
    environment:
      TZ: Asia/Kolkata
      Bugsnag:Enable: false 
    volumes:
      - type: bind
        source: ${CONFIG_LOCATION}/Tunarr
        target: /config/tunarr

  invidious:
    container_name: invidious
    image: quay.io/invidious/invidious:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
    mem_limit: 1G       
    memswap_limit: 1G
    security_opt:
      - no-new-privileges=true
    dns:
      - 9.9.9.11
      - 1.1.1.1
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.iv.rule=Host(`iv.${MY_DOMAIN}`)'
      - 'traefik.http.routers.iv.entryPoints=websecure'
      - "traefik.http.services.iv.loadbalancer.server.port=3000"
    environment:
      INVIDIOUS_CONFIG: |
        db:
          dbname: invidious
          user: anki
          password: anki
          host: invidious-db
          port: 5432
        check_tables: true
        signature_server: inv_sig_helper:12999
        visitor_data: CHANGE_ME!
        po_token: CHANGE_ME!
        port: 3000
        external_port: 443
        https_only: true
        domain: iv.${MY_DOMAIN}
        hmac_key: "CHANGE_ME!"
        quality: dash
        region: GB
      healthcheck:
      test: wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/trending || exit 1
      interval: 30s
      timeout: 5s
      retries: 2
    logging:
      options:
        max-size: "1G"
        max-file: "4"
    depends_on:
      - invidious-db

  inv_sig_helper:
    container_name: invidious_signer
    image: quay.io/invidious/inv-sig-helper:latest
    init: true
    mem_limit: 512M            
    memswap_limit: 512M 
    command: ["--tcp", "0.0.0.0:12999"]
    environment:
      - RUST_LOG=info
    restart: unless-stopped
    cap_drop:
      - ALL
    read_only: true
    security_opt:
      - no-new-privileges:true

  invidious-db:
    container_name: invidious-db
    image: docker.io/library/postgres:14
    mem_limit: 512M            
    memswap_limit: 512M 
    restart: unless-stopped
    volumes:
      - type: bind
        source: ${CONFIG_LOCATION}/invidious/postgresdata
        target: /var/lib/postgresql/data
      - type: bind
        source: ${CONFIG_LOCATION}/invidious/config/sql
        target: /config/sql
      - type: bind
        source: ${CONFIG_LOCATION}/invidious/docker/init-invidious-db.sh
        target: /docker-entrypoint-initdb.d/init-invidious-db.sh
    environment:
      POSTGRES_DB: invidious
      POSTGRES_USER: anki
      POSTGRES_PASSWORD: anki
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]

  materialious:
    container_name: matrialious
    image: wardpearce/materialious:latest
    mem_limit: 512M            
    memswap_limit: 512M 
    restart: unless-stopped
    ports:
      - 3001:80
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.yt.rule=Host(`yt.${MY_DOMAIN}`)'
      - 'traefik.http.routers.yt.entryPoints=websecure'
      - "traefik.http.services.yt.loadbalancer.server.port=80"
    environment:
      VITE_DEFAULT_INVIDIOUS_INSTANCE: "https://iv.${MY_DOMAIN}"
      VITE_DEFAULT_RETURNYTDISLIKES_INSTANCE: "https://returnyoutubedislikeapi.com"
      VITE_DEFAULT_SPONSERBLOCK_INSTANCE: "https://sponsor.ajay.app"
      VITE_DEFAULT_DEARROW_INSTANCE: "https://sponsor.ajay.app"
      VITE_DEFAULT_DEARROW_THUMBNAIL_INSTANCE: "https://dearrow-thumb.ajay.app"
      VITE_DEFAULT_SETTINGS: '{"themeColor": "#2596be","region": "US"}'
      VITE_DEFAULT_DASH_BITRATE: -1
      VITE_DEFAULT_DOWNLOAD_ENABLED: false
