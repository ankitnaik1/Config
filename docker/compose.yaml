services:
  proxy:
    image: traefik
    container_name: traefik
    restart: unless-stopped
    mem_limit: 512M            
    memswap_limit: 1G 
    dns:
     - 9.9.9.11
     - 1.1.1.1
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=duckdns"
      - "--certificatesresolvers.letsencrypt.acme.email=mail@mail.com"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.disablePropagationCheck=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=9.9.9.9:53,1.1.1.1:53"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certResolver=letsencrypt"
      - "--entrypoints.websecure.http.tls.domains[0].main=${MY_DOMAIN}"
      - "--entrypoints.websecure.http.tls.domains[0].sans=*.${MY_DOMAIN}"
    volumes:
      - "${CONFIG_LOCATION}/traefik:/letsencrypt"
      - "/run/user/1000/docker.sock:/var/run/docker.sock:ro"
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`${MY_DOMAIN}`)'
      - 'traefik.http.routers.api.entryPoints=websecure'
      - 'traefik.http.routers.api.service=api@internal'
    ports:
      - "443:443"
      - "80:80"
    environment:
      DUCKDNS_TOKEN: "${DUCKDNS_TOKEN}"

  deluge:
    container_name: deluge
    image: linuxserver/deluge:latest
    restart: unless-stopped
    mem_limit: 512M            
    memswap_limit: 2G 
    dns:
     - 9.9.9.11
     - 1.1.1.1
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.deluge.rule=Host(`deluge.${MY_DOMAIN}`)'
      - 'traefik.http.routers.deluge.entryPoints=websecure'
    environment:
      TZ: Asia/Kolkata
    volumes:
      - type: bind
        source: ${CONFIG_LOCATION}/deluge
        target: /config
      - type: bind
        source: ${DOWNLOADS_LOCATION}
        target: /downloads

  jellyfin:
    container_name: jellyfin
    image: jellyfin/jellyfin:latest
    restart: unless-stopped
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
    mem_limit: 1G            
    memswap_limit: 2G 
    dns:
     - 9.9.9.11
     - 1.1.1.1
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.jellyfin.rule=Host(`jellyfin.${MY_DOMAIN}`)'
      - 'traefik.http.routers.jellyfin.entryPoints=websecure'
    environment:
      TZ: Asia/Kolkata
    volumes:
      - type: tmpfs
        target: /cache
      - type: bind
        source: ${CONFIG_LOCATION}/Jellyfin
        target: /config
      - type: bind
        source: ${MOVIES_LOCATION}
        target: /media/Movies
        read_only: true
      - type: bind
        source: ${TV_SHOWS_LOCATION}
        target: /media/TV_Shows
        read_only: true
    ports:
      - "8096:8096"
 
  redlib:
    container_name: "redlib"
    image: quay.io/redlib/redlib:latest
    restart: always
    mem_limit: 512M            
    memswap_limit: 1G 
    dns:
     - 9.9.9.11
     - 1.1.1.1
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.redlib.rule=Host(`redlib.${MY_DOMAIN}`)'
      - 'traefik.http.routers.redlib.entryPoints=websecure'
    env_file: redlib.env

  yt-local:
    container_name: "yt-local"
    image: docker.io/rusian/yt-local
    restart: always
    mem_limit: 512M            
    memswap_limit: 1G 
    dns:
     - 9.9.9.11
     - 1.1.1.1
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.yt-local.rule=Host(`yt-local.${MY_DOMAIN}`)'
      - 'traefik.http.routers.yt-local.entryPoints=websecure'
    env_file: yt-local.env
